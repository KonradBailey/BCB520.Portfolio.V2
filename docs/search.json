[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Konrad Bailey is a graduate student at the University of Idaho studying geographic information science and statistics.\n\nEducation\nUniversity of Oregon | BS in Psychology with departmental honors, 2017-2020\n\n\nMy GitHub…\nInsert link here"
  },
  {
    "objectID": "posts/MarksChannels/index.html",
    "href": "posts/MarksChannels/index.html",
    "title": "Assignment 4",
    "section": "",
    "text": "Code\nlibrary(ggplot2)\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(dplyr)\n#library(plotly)"
  },
  {
    "objectID": "posts/MarksChannels/index.html#expressiveness-and-effectiveness",
    "href": "posts/MarksChannels/index.html#expressiveness-and-effectiveness",
    "title": "Assignment 4",
    "section": "Expressiveness and Effectiveness",
    "text": "Expressiveness and Effectiveness\n\nFigure 1\n\n\nCode\nset.seed(42) # For reproducibility\n\n# Creating the dataset\ndeadly.critters &lt;- data.frame(\n  critter.type = rep(c(\"mosquitoes\", \"the family dog\", \"hippopotamuses\", \"rattle snakes\"), each = 50),\n  humans.killed = c(\n    rpois(50, lambda = 1000), # Mosquitoes have the highest score, using Poisson distribution for count data\n    rpois(50, lambda = 500),  # The family dog has the second highest score\n    rpois(50, lambda = 20),   # Hippopotamuses have lower scores\n    rpois(50, lambda = 20)    # Rattle snakes have lower scores, similar to hippopotamuses\n  )\n)\n\n# Viewing the first few rows of the dataset\nhead(deadly.critters)\n\n\n  critter.type humans.killed\n1   mosquitoes          1043\n2   mosquitoes           982\n3   mosquitoes          1001\n4   mosquitoes           965\n5   mosquitoes           996\n6   mosquitoes           979\n\n\n\n\nCode\n# Assuming the dataset deadly.critters already exists\n# Summarizing average humans killed by each critter type for the bar heights\navg_kills &lt;- aggregate(humans.killed ~ critter.type, data = deadly.critters, mean)\n\n# Creating the bar chart\nggplot(avg_kills, aes(x = critter.type, y = humans.killed, fill = critter.type)) +\n  geom_bar(stat = \"identity\", position = position_dodge(), width = 0.7) +\n  scale_fill_manual(values = c(\"mosquitoes\" = \"#9C51B6\", \n                               \"the family dog\" = \"#D86060\", \n                               \"hippopotamuses\" = \"#324AB2\", \n                               \"rattle snakes\" = \"#708D81\")) +\n  labs(title = \"Humans Killed by Critter Type\",\n       x = \"Critter Type\", y = \"Average Humans Killed\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Improve readability of critter type labels\n\n\n\n\n\n\n\nFigure 2\n\n\nCode\n# Summarize data to get total or average humans.killed by critter type\nsummary_data &lt;- deadly.critters %&gt;%\n  group_by(critter.type) %&gt;%\n  summarise(total_killed = sum(humans.killed)) %&gt;%\n  mutate(percentage = total_killed / sum(total_killed)) %&gt;%\n  arrange(desc(percentage))\n\n# Create a factor with levels ordered by the percentage to use in the fill aesthetic\nsummary_data$critter.type &lt;- factor(summary_data$critter.type, levels = summary_data$critter.type)\n\n# Manually create a gradient based on the percentage for each critter type\ngradient_colors &lt;- colorRampPalette(c(\"#93A5A6\", \"#708D81\"))(n = nrow(summary_data))\n\n# Creating a pie chart\nggplot(summary_data, aes(x = \"\", y = percentage, fill = critter.type)) +\n  geom_bar(width = 1, stat = \"identity\", color = \"white\") + \n  coord_polar(\"y\", start = 0) +\n  scale_fill_manual(values = setNames(gradient_colors, summary_data$critter.type)) +\n  labs(title = \"Interpretation Challenge: Humans Killed by Critters\",\n       x = NULL, y = NULL, fill = \"Critter Type\") +\n  theme_void() +\n  theme(legend.title = element_blank())\n\n\n\n\n\nThis visualization is much less effective than the previous figure. Assessing the most important attribute is obscured by using a pie chart and color coding critter types using similar colors. Additionally the pie chart makes it difficult to discern if any difference in exists between rattle snakes and hippopotamuses."
  },
  {
    "objectID": "posts/MarksChannels/index.html#discriminability",
    "href": "posts/MarksChannels/index.html#discriminability",
    "title": "Assignment 4",
    "section": "Discriminability",
    "text": "Discriminability\n\nFigure 3\n\n\nCode\nage_groups &lt;- c('10-15', '15-20', '20-25', '25-30', '30-35')\nworry_scores &lt;- c(2, 8, 9, 7, 4) # Example scores based on the described trend\n\n# Create a data frame\nnonsense.data &lt;- data.frame(\n  Age_Group = factor(age_groups, levels = age_groups),\n  Mean_Worry_Score = worry_scores\n)\n\n# Display the dataset\nprint(nonsense.data)\n\n\n  Age_Group Mean_Worry_Score\n1     10-15                2\n2     15-20                8\n3     20-25                9\n4     25-30                7\n5     30-35                4\n\n\n\n\nCode\n# Create the bar chart\nggplot(nonsense.data, aes(x = Age_Group, y = Mean_Worry_Score, fill = \"glaucous green\")) +\n  geom_bar(stat = \"identity\", color = \"black\", fill = \"#6082B6\") + # Fill bars with glaucous green\n  labs(title = \"Worrying About Stupid Nonsense as a Function of Age\", x = \"Age Group\", y = \"Mean Worry Score\") +\n  theme_minimal() +\n  theme(legend.position = \"none\") # Hide the legend\n\n\n\n\n\nChunking age into five year bins makes it easy to discriminate between particular segments of one’s life and spot trends in worrying about stupid nonsense scores.\n\n\nFigure 4\n\n\nCode\n# Define the age range in three-month segments as fractions of a year\nages &lt;- seq(10, 35, by = 0.25)\n\n# Initialize worry scores according to the described trend\nworry_scores &lt;- numeric(length(ages))\nworry_scores[ages &lt;= 15] &lt;- 2 # Very low scores for ages 10-15\nworry_scores[ages &gt; 15 & ages &lt;= 20] &lt;- seq(3, 9, length.out = length(worry_scores[ages &gt; 15 & ages &lt;= 20])) # Increase from 15-20\nworry_scores[ages &gt; 20 & ages &lt;= 25] &lt;- 9 # High scores 20-25\nworry_scores[ages &gt; 25 & ages &lt;= 30] &lt;- seq(9, 7, length.out = length(worry_scores[ages &gt; 25 & ages &lt;= 30])) # Decline 25-30\nworry_scores[ages &gt; 30 & ages &lt;= 35] &lt;- seq(7, 4, length.out = length(worry_scores[ages &gt; 30 & ages &lt;= 35])) # Further decline 30-35\n\n# Create the dataset\ndataset_three_month &lt;- data.frame(\n  Age = ages,\n  Worry_Score = worry_scores\n)\n\n\n\n\nCode\n# Plot\nggplot(dataset_three_month, aes(x = as.factor(Age), y = Worry_Score)) +\n  geom_bar(stat = \"identity\", fill = \"#6082B6\") + # Glaucous green bars\n  labs(title = \"Cruddy Barchart About Worrying Too Much\",\n       x = \"Age (Years in Three-Month Segments)\",\n       y = \"Worry Score\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + # Rotate x-axis labels for readability\n  theme(legend.position = \"none\") # Hide the legend\n\n\n\n\n\nBinning the data into three month segments still depicts the general trend of the data, but it’s cluttered and the x-axis looks terrible."
  },
  {
    "objectID": "posts/MarksChannels/index.html#separability",
    "href": "posts/MarksChannels/index.html#separability",
    "title": "Assignment 4",
    "section": "Separability",
    "text": "Separability\n\nFigure 5\n\n\nCode\n# Create the imaginary dataset\ncereal.data &lt;- data.frame(\n  age = factor(c(\"5 years old\", \"50 years old\")),\n  cereal.consumption = c(8, 3) # Assuming mean scores for demonstration\n)\n\n\n\n\nCode\ncolors &lt;- c(\"5 years old\" = \"#8E3A59\",  # Spinel red\n            \"50 years old\" = \"#93C572\")  # Pistachio green\n\n# Plot\nggplot(cereal.data, aes(x = age, y = cereal.consumption, fill = age)) +\n  geom_bar(stat = \"identity\", color = \"black\", show.legend = FALSE) +\n  scale_fill_manual(values = colors) +\n  labs(title = \"Cereal Consumption as a Function of Age\",\n       x = \"Age\",\n       y = \"Cereal Consumption Score\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Improve readability\n\n\n\n\n\nThis barchart uses position to convey differences in cereal consumption across the levels for the independent variable age. The two levels of age are differentiated by the fill color of the bars, which is entirely separable from position as a channel.\n\n\nFigure 6\n\n\nCode\n# Adjusting the example dataset for more overlap, same as before\nset.seed(42) # For reproducibility\ndata &lt;- data.frame(\n  Age_Level = factor(rep(c(\"5 years old\", \"50 years old\"), each = 50)),\n  Score = c(rnorm(50, mean = 8, sd = 2), rnorm(50, mean = 5, sd = 2)), # More overlap\n  X_Position = rep(1:50, times = 2)\n)\n\n# Venice green color\nvenice_green &lt;- \"#055C59\"\n\n# Creating the plot with the specified updates\nggplot(data, aes(x = X_Position, y = Score, group = Age_Level)) +\n  geom_segment(data = subset(data, Age_Level == \"5 years old\"), \n               aes(xend = X_Position, yend = Score - 0.2, color = Age_Level), \n               size = 1.2, linetype = \"solid\") + # Slightly larger lines for visibility\n  geom_segment(data = subset(data, Age_Level == \"50 years old\"), \n               aes(xend = X_Position + 0.3, yend = Score - 0.2, color = Age_Level), \n               size = 1.2, linetype = \"solid\") + # Slightly offset to simulate \"bent\"\n  scale_color_manual(name = \"Age Level\",\n                     values = c(\"5 years old\" = venice_green, \"50 years old\" = venice_green),\n                     labels = c(\"5 years old (vertical rectangle)\", \"50 years old (slightly tilted rectangle)\")) +\n  theme_minimal() +\n  labs(title = \"Cereal Consumption as a Function of Age - Cruddy Separability V1\", x = \"Data Point Index\", y = \"Score\") +\n  theme(legend.position = \"right\")\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\nCode\n# Note: Both age levels use the venice green color but the legend explains the line types\n\n\n\n\nCode\nset.seed(42) # For reproducibility\ncereal.data.V2 &lt;- data.frame(\n  Age_Level = factor(rep(c(\"5 years old\", \"50 years old\"), each = 50)),\n  Score = c(rnorm(50, mean = 8, sd = 2), rnorm(50, mean = 5, sd = 2)), # More overlap\n  X_Position = c(rnorm(50, mean = 8, sd = 2), rnorm(50, mean = 8, sd = 2)),\n    Y_Position = c(rnorm(50, mean = 8, sd = 2), rnorm(50, mean = 8, sd = 2))\n)\n\n\n\n\nCode\n# Create the scatterplot\nggplot(cereal.data.V2, aes(x = X_Position, y = Y_Position)) +\n  geom_point(aes(shape = Age_Level, color = Score, alpha = Score), size = 3) +\n  #scale_shape_manual(values = c(\"5 years old\" = 17, \"50 years old\" = 15)) + # Assign shapes\n  #scale_color_gradient(low = \"blue\", high = \"red\") + # Assign color gradient for Score\n  labs(title = \"Cereal Consumption as a Function of Age - Cruddy Separability V2\",\n       x = \"X Position\", y = \"Y Position\",\n       color = \"Score\", shape = \"Age Level\") +\n  theme_minimal()\n\n\n\n\n\n\n\nFigure 7\n\n\nCode\nset.seed(42)  # Ensure reproducibility\n\n# Sample sizes\nn &lt;- 50\n\n# Generating data for the categorical independent variable 'critters'\ncritters &lt;- factor(rep(c(\"gophers\", \"bunny-rabbits\", \"weasels\"), each = n))\n\n# Generating data for the binary dependent variable 'bubonic plague'\n# with 'gophers' having a much higher infection rate\nbubonic_plague &lt;- c(\n  rbinom(n, 1, prob = 0.8),  # High infection rate for 'gophers'\n  rbinom(n, 1, prob = 0.2),  # Lower infection rate for 'bunny-rabbits'\n  rbinom(n, 1, prob = 0.15)  # Even lower infection rate for 'weasels'\n)\n\n# Creating the data frame and naming it 'bubonic.data'\nbubonic.data &lt;- data.frame(critters, bubonic_plague)\n\n# Viewing the first few rows of 'bubonic.data'\nhead(bubonic.data)\n\n\n  critters bubonic_plague\n1  gophers              0\n2  gophers              0\n3  gophers              1\n4  gophers              0\n5  gophers              1\n6  gophers              1\n\n\n\n\nCode\n# Calculating the infection rate for each critter type\ninfection_rates &lt;- bubonic.data %&gt;%\n  group_by(critters) %&gt;%\n  summarise(Infection_Rate = mean(bubonic_plague)) # since bubonic_plague is 0 for not infected and 1 for infected\n\n# Viewing the infection rates\nprint(infection_rates)\n\n\n# A tibble: 3 × 2\n  critters      Infection_Rate\n  &lt;fct&gt;                  &lt;dbl&gt;\n1 bunny-rabbits           0.1 \n2 gophers                 0.64\n3 weasels                 0.16\n\n\n\n\nCode\nggplot(bubonic.data, aes(x = critters, y = bubonic_plague, fill = critters)) +\n  stat_summary(fun.y = \"mean\", geom = \"bar\", position = \"dodge\", aes(alpha = critters)) +\n  scale_fill_manual(values = c(\"gophers\" = \"#6C3461\", \"weasels\" = \"#708D81\", \"bunny-rabbits\" = \"#93A5A6\")) +\n  scale_alpha_manual(values = c(\"gophers\" = 1, \"weasels\" = 0.9, \"bunny-rabbits\" = 0.9)) +\n  labs(title = \"Bubonic Plague Infection Rates by Critter Type\",\n       x = \"Critter Type\", y = \"Infection Rate\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  guides(fill = guide_legend(title = \"Critter Type\"), alpha = FALSE)  # Remove alpha legend\n\n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n\n\nWarning: The `&lt;scale&gt;` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n\n\n\n\n\nThis figure uses the channel position on a common scale, enhanced by a sharp color contrast between the critter type with the highest infection rate and the other two types of critters, to create POP-OUT.\n\n\nFigure 8\n\n\nCode\n# Calculate the proportion or rate of infection for each critter\ninfection_rates &lt;- bubonic.data %&gt;%\n  group_by(critters) %&gt;%\n  summarise(Infected_Rate = mean(bubonic_plague), .groups = 'drop')  # Calculate infection rate\n\n# Creating the bar chart with a slightly less distorted scale\nggplot(infection_rates, aes(x = critters, y = Infected_Rate, fill = critters)) +\n  geom_bar(stat = \"identity\", position = position_dodge(), show.legend = FALSE) +\n  scale_fill_manual(values = c(\"weasels\" = \"#93A5A6\", \"bunny-rabbits\" = \"#93A5A6\", \"gophers\" = \"#93A5A6\")) +\n  labs(title = \"Minimized Pop-Out Across Critters\",\n       x = \"Critter Type\", y = \"Infection Rate\") +\n  ylim(0, 10) +  # Adjust the scale to be less distorted\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Improve readability of x labels\n\n\n\n\n\nThis bar chart reduces pop-out by distorting the scale of the y-axis and making the color of the bars uniform."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "library(ggplot2)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(MASS)\n\n\nAttaching package: 'MASS'\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\n\n\n\n\nDougFir.data &lt;- read.csv(\"~/Desktop/DougFir.data.csv\", skip=1)\n\n\n\n\n\nhead(DougFir.data)\n\n              SPM  MAR  DBH    HT       HDR\n1 Metasedimentary 12.3 35.5 28.24 0.7954930\n2       Intrusive 13.3 41.9 29.15 0.6957041\n3       Intrusive 13.3 49.4 30.89 0.6253036\n4       Intrusive 13.3 23.7 21.77 0.9185654\n5       Intrusive 13.3 44.9 30.77 0.6853007\n6       Intrusive 13.3 23.0  9.10 0.3956522\n\n\n\n\n\nThese data are presented in the form of a table.\n\n\n\nMy independent variables are soil parent material (categorical) and mean annual radiation (continuous). The variables diameter breast height (continuous) and height (continuous) are used to derive my dependent variable, height diameter ratio (continuous).\n\n\n\nNote: Requires data cleaning.\n\nDougFir.plot &lt;-ggplot(DougFir.data, aes(x= MAR, y=HDR, color=SPM)) + geom_point(size=3) +\n  ggtitle('Effect of Soil Parent Material and Mean Annual Radiation \nOn Douglas Fir Height/Diameter Ratio')\nDougFir.plot + scale_color_brewer(palette=\"Dark2\")\n\nWarning: Removed 1 rows containing missing values (`geom_point()`).\n\n\n\n\n\nI don’t like this plot. It’s difficult to interpret the effect of mean annual radiation and the clustered nature of the data looks a tad weird.\n\n\n\n\nDougFir.box &lt;- ggplot(DougFir.data, aes(x = SPM, y = HDR, fill = SPM)) + \ngeom_boxplot(outlier.shape = NA) + \ntheme(legend.position=\"top\") +\n  ggtitle('Effect of Soil Parent Material and Mean Annual Radiation \nOn Douglas Fir Height/Diameter Ratio')\nDougFir.box + scale_color_brewer(palette=\"Dark2\")\n\nWarning: Removed 1 rows containing non-finite values (`stat_boxplot()`)."
  },
  {
    "objectID": "posts/post-with-code/index.html#development-of-statistical-model",
    "href": "posts/post-with-code/index.html#development-of-statistical-model",
    "title": "Post With Code",
    "section": "",
    "text": "library(ggplot2)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(MASS)\n\n\nAttaching package: 'MASS'\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\n\n\n\n\nDougFir.data &lt;- read.csv(\"~/Desktop/DougFir.data.csv\", skip=1)\n\n\n\n\n\nhead(DougFir.data)\n\n              SPM  MAR  DBH    HT       HDR\n1 Metasedimentary 12.3 35.5 28.24 0.7954930\n2       Intrusive 13.3 41.9 29.15 0.6957041\n3       Intrusive 13.3 49.4 30.89 0.6253036\n4       Intrusive 13.3 23.7 21.77 0.9185654\n5       Intrusive 13.3 44.9 30.77 0.6853007\n6       Intrusive 13.3 23.0  9.10 0.3956522\n\n\n\n\n\nThese data are presented in the form of a table.\n\n\n\nMy independent variables are soil parent material (categorical) and mean annual radiation (continuous). The variables diameter breast height (continuous) and height (continuous) are used to derive my dependent variable, height diameter ratio (continuous).\n\n\n\nNote: Requires data cleaning.\n\nDougFir.plot &lt;-ggplot(DougFir.data, aes(x= MAR, y=HDR, color=SPM)) + geom_point(size=3) +\n  ggtitle('Effect of Soil Parent Material and Mean Annual Radiation \nOn Douglas Fir Height/Diameter Ratio')\nDougFir.plot + scale_color_brewer(palette=\"Dark2\")\n\nWarning: Removed 1 rows containing missing values (`geom_point()`).\n\n\n\n\n\nI don’t like this plot. It’s difficult to interpret the effect of mean annual radiation and the clustered nature of the data looks a tad weird.\n\n\n\n\nDougFir.box &lt;- ggplot(DougFir.data, aes(x = SPM, y = HDR, fill = SPM)) + \ngeom_boxplot(outlier.shape = NA) + \ntheme(legend.position=\"top\") +\n  ggtitle('Effect of Soil Parent Material and Mean Annual Radiation \nOn Douglas Fir Height/Diameter Ratio')\nDougFir.box + scale_color_brewer(palette=\"Dark2\")\n\nWarning: Removed 1 rows containing non-finite values (`stat_boxplot()`)."
  },
  {
    "objectID": "posts/post-with-code/index.html#task-abstraction",
    "href": "posts/post-with-code/index.html#task-abstraction",
    "title": "Post With Code",
    "section": "Task Abstraction:",
    "text": "Task Abstraction:\n\nAction: Discover\n\n\nTarget: Identify trends and features of the data"
  },
  {
    "objectID": "posts/post-with-code/index.html#future-objectives",
    "href": "posts/post-with-code/index.html#future-objectives",
    "title": "Post With Code",
    "section": "Future Objectives:",
    "text": "Future Objectives:\nI want to create a visualization that demonstrates the difference in HDR based on SPM. However, using the raw to generate a boxplot doesn’t control for my covariate, so at best it merely provides the reader a preliminary gist of what’s going on. The effect of soil parent material after controlling for mean annual radiation can’t be assessed until after performing the ANCOVA. I’m considering creating a boxplot based on the predicted values of my regression model, which control for mean annual radiation, and displaying it side-by-side with the boxplot based on the raw data.\nDevelop a personalized template of aesthetic preferences for ggplot figures."
  },
  {
    "objectID": "posts/post-with-code/index.html#continued-development-of-statistical-model",
    "href": "posts/post-with-code/index.html#continued-development-of-statistical-model",
    "title": "Post With Code",
    "section": "Continued Development of Statistical Model:",
    "text": "Continued Development of Statistical Model:\n\nCreating Linear Regression Model:\nNote: How does the creation of this linear model control for MAR? Because regression inherently controls for the effect of additional variables in the model when assessing the effect of a single variable, right?\n\nDougFir.ANCOVA &lt;- lm(HDR ~ MAR + SPM, data = DougFir.data)\n\n\n\nPerforming ANOVA:\nNote: Should I label this ANCOVA?\n\nanova(DougFir.ANCOVA)\n\nAnalysis of Variance Table\n\nResponse: HDR\n          Df  Sum Sq Mean Sq F value    Pr(&gt;F)    \nMAR        1 0.00809 0.00809  0.3423    0.5602    \nSPM        2 0.67668 0.33834 14.3116 5.075e-06 ***\nResiduals 78 1.84398 0.02364                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nGenerating Residual-by-Predicted Plot:\n\nplot(predict(DougFir.ANCOVA), rstandard(DougFir.ANCOVA),\n     main = 'Douglas Fir Residuals')\nabline(0,0)\n\n\n\n\nThe pattern in the residuals-by-predicted plot demonstrates a slight megaphone pattern, violating the assumption equal variance necessary for regression.\n\n\nGenerating QQ Plot:\n\nDougFir.QQ &lt;- rstandard(DougFir.ANCOVA)\nqqnorm(DougFir.QQ,\n       ylab = 'Height/Diameter Ratio',\n       xlab = 'Normal Scores',\n       main = 'Douglas Fir QQ',)\nqqline(DougFir.QQ)\n\n\n\n\nThe QQ plot shows that my data decently conforms to a normal distribution.\n\n\nPerforming Box-Cox Analysis:\n\nboxcox(HDR ~ MAR + SPM, data = DougFir.data, lambda = seq(-1.25, 1.25, length = 10))\n\n\n\n\n\n\nPerforming Transformation on the Regression Model with Lambda set to 0.1:\n\nDougFir.ANCOVA.02 &lt;- lm(HDR^0.1 ~ MAR + SPM, data = DougFir.data)\n\n\n\nGenerating Residual-by-Predicted Plot After Performing Transformation:\n\nplot(predict(DougFir.ANCOVA.02), rstandard(DougFir.ANCOVA.02),\n     main = 'Douglas Fir Residuals with Lambda = 0.1')\nabline(0,0)\n\n\n\n\nThe pattern in the residuals-by-predicted plot, after performing the transformation with lambda = 0.1, demonstrates a more equal distribution of the residual errors, making this model a better fit.\n\n\nGenerating QQ Plot After Performing Transformation:\n\nDougFir.QQ.02 &lt;- rstandard(DougFir.ANCOVA.02)\nqqnorm(DougFir.QQ.02,\n       ylab = 'Height/Diameter Ratio',\n       xlab = 'Normal Scores',\n       main = 'Douglas Fir QQ with Lambda = 0.1',)\nqqline(DougFir.QQ.02)\n\n\n\n\nThe QQ plot shows that my data conform to a normal distribution.\n\n\nPerforming ANOVA on the Transformed Model:\n\nanova(DougFir.ANCOVA.02)\n\nAnalysis of Variance Table\n\nResponse: HDR^0.1\n          Df   Sum Sq   Mean Sq F value    Pr(&gt;F)    \nMAR        1 0.000122 0.0001223  0.2398    0.6257    \nSPM        2 0.014447 0.0072234 14.1647 5.652e-06 ***\nResiduals 78 0.039777 0.0005100                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nPerforming a Tukey’s Honestly Significant Difference Test:\nNote: The next step is to perform a post-hoc test to determine which soil parent materials demonstrated significant differences in their effect on HDR."
  },
  {
    "objectID": "posts/welcome/welcome.html",
    "href": "posts/welcome/welcome.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Konrad Bailey is a graduate student at the University of Idaho studying statistics and geographic information systems.\n\nEducation:\nBS Psychology with departmental honors | University of Oregon | 2017 - 2020"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BCB520.Portfolio.V2",
    "section": "",
    "text": "Konrad Bailey\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\nBCB520: Assignment 03\n\n\nPost With Code\n\n\nAnalyzing the effect of soil parent material on the height/diameter ratio of Douglas fir trees after controlling for mean annual radiation.\n\n\n\n\n\n\nKonrad Bailey\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\nThis is my first Quarto blog, designed to help me learn the ropes of GitHub.\n\n\n\n\n\n\nKonrad Bailey\n\n\n\n\n\n\n  \n\n\n\n\nBCB520: Assignment 04\n\n\nMarks and Channels\n\n\nExperimenting with marks and channels to demonstrate good and bad practices in data-visualizaton.\n\n\n\n\n\n\nKonrad Bailey\n\n\n\n\n\n\nNo matching items"
  }
]